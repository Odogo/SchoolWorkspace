package junior.september.bigllist;

import java.util.Random;

/*
 * Resulted Output:

[58, 19, 85, 68, 43, 5, 95, 96, 39, 36, 57, 19, 58, 50, 91, 23, 8, 53, 4, 33, 67, 93, 84, 21, 33, 54, 98, 26, 13, 14, 1, 2, 6, 37, 44, 64, 88, 40, 82, 7, 14, 79, 84, 80, 93, 64, 54, 81, 80, 52, 11, 91, 49, 9, 19, 87, 50, 95, 87, 4, 80, 20, 53, 66, 32, 17, 97, 71, 53, 39, 9, 2, 3, 85, 96, 4, 94, 81, 83, 20, 67, 79, 29, 86, 74, 49, 29, 2, 8, 11, 73, 85, 43, 55, 55, 64, 96, 67, 69, 97, 84, 48, 51, 99, 66, 5, 2, 31, 15, 10, 7, 30, 1, 26, 45, 69, 43, 65, 29, 11, 95, 20, 3, 6, 51, 76, 41, 53, 55, 47, 26, 28, 15, 33, 22, 43, 21, 54, 47, 56, 31, 7, 60, 27, 35, 59, 32, 28, 71, 63, 92, 66, 6, 48, 45, 40, 4, 5, 76, 40, 54, 24, 86, 21, 52, 53, 86, 85, 44, 61, 53, 24, 18, 8, 52, 18, 87, 44, 64, 80, 35, 41, 97, 96, 57, 73, 52, 45, 67, 70, 45, 49, 41, 20, 34, 80, 77, 55, 7, 8, ]
202
false
false
97
75
91
removed: 97
removed: 75
removed: 53
28
true
37
reverse: 
[58, 19, 85, 68, 43, 5, 95, 96, 39, 36, 57, 19, 58, 50, 91, 23, 8, 53, 4, 33, 67, 93, 84, 21, 33, 54, 98, 26, 13, 14, 1, 2, 6, 37, 44, 64, 88, 40, 82, 88, 7, 14, 79, 84, 80, 93, 64, 54, 81, 80, 52, 11, 91, 49, 9, 19, 87, 50, 95, 87, 4, 80, 20, 53, 66, 32, 17, 97, 71, 53, 39, 9, 2, 3, 85, 96, 4, 94, 81, 83, 20, 67, 79, 29, 86, 74, 49, 29, 2, 8, 11, 73, 85, 43, 55, 55, 64, 96, 67, 69, 97, 84, 48, 51, 99, 66, 5, 2, 31, 15, 10, 7, 30, 1, 26, 45, 69, 43, 65, 29, 11, 95, 20, 3, 6, 51, 76, 41, 53, 55, 47, 26, 28, 15, 33, 22, 43, 21, 54, 47, 56, 31, 7, 60, 27, 35, 59, 32, 28, 71, 63, 92, 66, 6, 48, 45, 40, 4, 5, 76, 40, 54, 24, 86, 21, 52, 53, 86, 85, 44, 61, 24, 18, 8, 52, 18, 87, 44, 64, 80, 35, 41, 97, 96, 57, 73, 52, 45, 67, 70, 45, 49, 41, 20, 34, 80, 77, 55, 7, 8, ]48.01
1
99
104
104
92


current: 
[58, 19, 85, 68, 43, 5, 95, 96, 39, 36, 57, 19, 58, 50, 91, 23, 8, 53, 4, 33, 67, 93, 84, 21, 33, 54, 98, 26, 13, 14, 1, 2, 6, 37, 44, 64, 88, 40, 82, 88, 7, 14, 79, 84, 80, 93, 64, 54, 81, 80, 52, 11, 91, 49, 9, 19, 87, 50, 95, 87, 4, 80, 20, 53, 66, 32, 17, 97, 71, 53, 39, 9, 2, 3, 85, 96, 4, 94, 81, 83, 20, 67, 79, 29, 86, 74, 49, 29, 2, 8, 11, 73, 85, 43, 55, 55, 64, 96, 67, 69, 97, 84, 48, 51, 99, 66, 5, 2, 31, 15, 10, 7, 30, 1, 26, 45, 69, 43, 65, 29, 11, 95, 20, 3, 6, 51, 76, 41, 53, 55, 47, 26, 28, 15, 33, 22, 43, 21, 54, 47, 56, 31, 7, 60, 27, 35, 59, 32, 28, 71, 63, 92, 66, 6, 48, 45, 40, 4, 5, 76, 40, 54, 24, 86, 21, 52, 53, 86, 85, 44, 61, 24, 18, 8, 52, 18, 87, 44, 64, 80, 35, 41, 97, 96, 57, 73, 52, 45, 67, 70, 45, 49, 41, 20, 34, 80, 77, 55, 7, 8, ]
after sort: 
[8, 8, 7, 55, 77, 80, 34, 20, 41, 49, 45, 70, 67, 45, 52, 73, 57, 96, 97, 41, 35, 80, 64, 44, 87, 18, 52, 8, 18, 24, 61, 44, 85, 86, 53, 52, 21, 86, 24, 54, 40, 76, 5, 4, 40, 45, 48, 6, 66, 92, 63, 71, 28, 32, 59, 35, 27, 60, 7, 31, 56, 47, 54, 21, 43, 22, 33, 15, 28, 26, 47, 55, 53, 41, 76, 51, 6, 3, 20, 95, 11, 29, 65, 43, 69, 45, 26, 1, 30, 7, 10, 15, 31, 2, 5, 66, 99, 51, 48, 84, 97, 69, 67, 96, 64, 55, 55, 43, 85, 73, 11, 8, 2, 29, 49, 74, 86, 29, 79, 67, 20, 83, 81, 94, 4, 96, 85, 3, 2, 9, 39, 53, 71, 97, 17, 32, 66, 53, 20, 80, 4, 87, 95, 50, 87, 19, 9, 49, 91, 11, 52, 80, 81, 54, 64, 93, 80, 84, 79, 14, 7, 88, 82, 40, 88, 64, 44, 37, 6, 2, 1, 14, 13, 26, 98, 54, 33, 21, 84, 93, 67, 33, 4, 53, 8, 23, 91, 50, 58, 19, 57, 36, 39, 96, 95, 5, 43, 68, 85, 19, 58, ]

current: 
[8, 8, 7, 55, 77, 80, 34, 20, 41, 49, 45, 70, 67, 45, 52, 73, 57, 96, 97, 41, 35, 80, 64, 44, 87, 18, 52, 8, 18, 24, 61, 44, 85, 86, 53, 52, 21, 86, 24, 54, 40, 76, 5, 4, 40, 45, 48, 6, 66, 92, 63, 71, 28, 32, 59, 35, 27, 60, 7, 31, 56, 47, 54, 21, 43, 22, 33, 15, 28, 26, 47, 55, 53, 41, 76, 51, 6, 3, 20, 95, 11, 29, 65, 43, 69, 45, 26, 1, 30, 7, 10, 15, 31, 2, 5, 66, 99, 51, 48, 84, 97, 69, 67, 96, 64, 55, 55, 43, 85, 73, 11, 8, 2, 29, 49, 74, 86, 29, 79, 67, 20, 83, 81, 94, 4, 96, 85, 3, 2, 9, 39, 53, 71, 97, 17, 32, 66, 53, 20, 80, 4, 87, 95, 50, 87, 19, 9, 49, 91, 11, 52, 80, 81, 54, 64, 93, 80, 84, 79, 14, 7, 88, 82, 40, 88, 64, 44, 37, 6, 2, 1, 14, 13, 26, 98, 54, 33, 21, 84, 93, 67, 33, 4, 53, 8, 23, 91, 50, 58, 19, 57, 36, 39, 96, 95, 5, 43, 68, 85, 19, 58, ]
deleted 58s: 
[8, 8, 7, 55, 77, 80, 34, 20, 41, 49, 45, 70, 67, 45, 52, 73, 57, 96, 97, 41, 35, 80, 64, 44, 87, 18, 52, 8, 18, 24, 61, 44, 85, 86, 53, 52, 21, 86, 24, 54, 40, 76, 5, 4, 40, 45, 48, 6, 66, 92, 63, 71, 28, 32, 59, 35, 27, 60, 7, 31, 56, 47, 54, 21, 43, 22, 33, 15, 28, 26, 47, 55, 53, 41, 76, 51, 6, 3, 20, 95, 11, 29, 65, 43, 69, 45, 26, 1, 30, 7, 10, 15, 31, 2, 5, 66, 99, 51, 48, 84, 97, 69, 67, 96, 64, 55, 55, 43, 85, 73, 11, 8, 2, 29, 49, 74, 86, 29, 79, 67, 20, 83, 81, 94, 4, 96, 85, 3, 2, 9, 39, 53, 71, 97, 17, 32, 66, 53, 20, 80, 4, 87, 95, 50, 87, 19, 9, 49, 91, 11, 52, 80, 81, 54, 64, 93, 80, 84, 79, 14, 7, 88, 82, 40, 88, 64, 44, 37, 6, 2, 1, 14, 13, 26, 98, 54, 33, 21, 84, 93, 67, 33, 4, 53, 8, 23, 91, 50, 19, 57, 36, 39, 96, 95, 5, 43, 68, 85, 19, ]

current: 
[8, 8, 7, 55, 77, 80, 34, 20, 41, 49, 45, 70, 67, 45, 52, 73, 57, 96, 97, 41, 35, 80, 64, 44, 87, 18, 52, 8, 18, 24, 61, 44, 85, 86, 53, 52, 21, 86, 24, 54, 40, 76, 5, 4, 40, 45, 48, 6, 66, 92, 63, 71, 28, 32, 59, 35, 27, 60, 7, 31, 56, 47, 54, 21, 43, 22, 33, 15, 28, 26, 47, 55, 53, 41, 76, 51, 6, 3, 20, 95, 11, 29, 65, 43, 69, 45, 26, 1, 30, 7, 10, 15, 31, 2, 5, 66, 99, 51, 48, 84, 97, 69, 67, 96, 64, 55, 55, 43, 85, 73, 11, 8, 2, 29, 49, 74, 86, 29, 79, 67, 20, 83, 81, 94, 4, 96, 85, 3, 2, 9, 39, 53, 71, 97, 17, 32, 66, 53, 20, 80, 4, 87, 95, 50, 87, 19, 9, 49, 91, 11, 52, 80, 81, 54, 64, 93, 80, 84, 79, 14, 7, 88, 82, 40, 88, 64, 44, 37, 6, 2, 1, 14, 13, 26, 98, 54, 33, 21, 84, 93, 67, 33, 4, 53, 8, 23, 91, 50, 19, 57, 36, 39, 96, 95, 5, 43, 68, 85, 19, ]
deleted odds: 
[8, 8, 80, 34, 20, 70, 52, 96, 80, 64, 44, 18, 52, 8, 18, 24, 44, 86, 52, 86, 24, 54, 40, 76, 4, 40, 48, 6, 66, 92, 28, 32, 60, 56, 54, 22, 28, 26, 76, 6, 20, 26, 30, 10, 2, 66, 48, 84, 96, 64, 8, 2, 74, 86, 20, 94, 4, 96, 2, 32, 66, 20, 80, 4, 50, 52, 80, 54, 64, 80, 84, 14, 88, 82, 40, 88, 64, 44, 6, 2, 14, 26, 98, 54, 84, 4, 8, 50, 36, 96, 68, ]

done
 */
public class BigLinkedList {
	
	public static void main(String[] args) {
		BLL_LinkedList<Integer> list = new BLL_LinkedList<Integer>();
		
		Random random = new Random();
		for(int i=0; i<200; i++) list.addFront(list.convertToNode(random.nextInt(99) + 1));
		
		list.printList();
		
		list.addFront(list.convertToNode(random.nextInt(99) + 1));
		list.addLast(list.convertToNode(random.nextInt(99) + 1));
		
		System.out.println("\n" + list.size()); // getCount
		list.add(list.convertToNode(random.nextInt(199) + 1), random.nextInt(99)+1);
		
		System.out.println(list.isEmpty());
		System.out.println(list.isThere(random.nextInt(99)+1));
		System.out.println(list.fetchRoot()); //fetchFirst
		System.out.println(list.fetchLast());
		System.out.println(list.fetch(random.nextInt(list.size())));
		System.out.println("removed: " + list.removeFirst());
		System.out.println("removed: " + list.removeLast());
		System.out.println("removed: " + list.remove(random.nextInt(list.size())));
		System.out.println(list.num_CountLess10());
		
		// I feel like clearing this list right now is very pointless
		
		System.out.println(list.num_checkForNum(random.nextInt(199)+1));
		System.out.println(list.num_getNum(random.nextInt(list.size())));
		
		System.out.println("reverse: ");
		list.printListReverse();
		
		System.out.println(list.num_average());
		System.out.println(list.num_min());
		System.out.println(list.num_max());
		System.out.println(list.num_findSlotMaxFirst());
		System.out.println(list.num_findSlotMaxLast());
		System.out.println(list.num_getEvenCount());
		
		System.out.println("\n\ncurrent: ");
		list.printList();
		System.out.println("\nafter sort: ");
		list.sort();
		list.printList();
		
		System.out.println("\n\ncurrent: ");
		list.printList();
		list.num_deleteValue58();
		System.out.println("\ndeleted 58s: ");
		list.printList();
		
		System.out.println("\n\ncurrent: ");
		list.printList();
		list.num_killOdds();
		System.out.println("\ndeleted odds: ");
		list.printList();
		
		System.out.println("\n\ndone");
	}
}
